//>>built
require({cache:{"xnode/main":function(){define(["dojo/_base/kernel","xnode/manager/NodeServiceManager","xnode/manager/NodeServiceManagerUI","xnode/views/NodeServiceView","xnode/component"],function(g){return g.xnode})},"xnode/manager/NodeServiceManager":function(){define("dcl/dcl xide/manager/ServerActionBase xide/manager/BeanManager xide/types xide/factory xide/data/Memory xide/client/WebSocket xdojo/has xide/factory/Clients dojo/Deferred xdojo/has!xnode-ui?./NodeServiceManagerUI".split(" "),function(g,
f,m,l,e,h,k,n,b,a,d){f=[f,m];d&&f.push(d);return g(f,{declaredClass:"xnode.manager.NodeServiceManager",serviceClass:"XIDE_NodeJS_Service",cookiePrefix:"nodeJSServices",singleton:!0,serviceView:null,clients:null,beanNamespace:"serviceConsoleView",consoles:{},createClient:function(a){if(a.info){!this.clients&&(this.clients={});var c=this.getViewId(a);if(this.clients[c])return this.clients[c];var d=new k({});this.clients[c]=d;d.init({options:{host:a.info.host,port:a.info.port,debug:{all:!1,protocol_connection:!0,
protocol_messages:!0,socket_server:!0,socket_client:!0,socket_messages:!0,main:!0}}});d.connect();return d}console.error("NodeJs service has no host info")},getStore:function(){return this.store},isValid:function(){return null!=this.store},initStore:function(a){return this.store=new h({data:{identifier:"name",label:"Name",items:a},idProperty:"name"})},init:function(){return this.ls()},getDefaults:function(a){return this.callMethodEx(null,"getDefaults",null,a,!0)},checkServer:function(a,c){return this.callMethodEx(null,
"checkServer",[a],c,!0)},runServer:function(a,c){return this.callMethodEx(null,"runDebugServer",[a],c,!0)},runDebug:function(a,c){return this.callMethodEx(null,"run",[a],c,!0)},stopServer:function(a,c){return this.callMethodEx(null,"stop",[a],c,!0)},startServer:function(a,c){return this.callMethodEx(null,"start",[a],c,!0)},ls:function(d,c,e){function b(a){f.rawData=a;f.initStore(a);!1!==e&&f.publish(l.EVENTS.ON_NODE_SERVICE_STORE_READY,{store:f.store});d&&d(a)}var f=this;c=null;if(this.services)return c=
new a,b(this.services),c.resolve(),c;c=this.runDeferred(null,"ls");try{c.then(function(a){b(a)})}catch(g){logError(g,"error loading store")}return c}})})},"xnode/manager/NodeServiceManagerUI":function(){define("dcl/dcl xide/encoding/MD5 xide/types xide/utils dojo/cookie dojo/json xide/lodash xdojo/has!xnode-ui?xide/views/ConsoleView xdojo/has!xnode-ui?xnode/views/NodeServiceView".split(" "),function(g,f,m,l,e,h,k,n,b){return g(null,{declaredClass:"xnode.manager.NodeServiceManagerUI",getViewId:function(a){return this.beanNamespace+
f(JSON.stringify({info:a.info}),1)},onConsoleEnter:function(a,d){if(0!=d.length){var b=a.view.client;k.isString(d)&&b.emit(null,d)}},createConsole:function(a,d,b){var c=this.getViewId(a);a=l.addWidget(n,{delegate:this,title:a.name,closable:!0,style:"padding:0px;margin:0px;height:inherit",className:"runView",client:b,item:a},this,d,!0);this.consoles[c]=a;return b.delegate=a},openConsole:function(a){this.getView(a);this.createConsole(a,this.getViewTarget(),this.createClient(a))},onReload:function(){this.ls(function(){this.serviceView.refresh(this.store)}.bind(this))},
loadPreferences:function(){var a=e(this.cookiePrefix+"_debug_settings");return a=a?h.parse(a):{}},savePreferences:function(a){e(this.cookiePrefix+"_debug_settings",h.stringify(a))},getViewTarget:function(){return this.ctx.getApplication().mainView.getNewAlternateTarget()},createServiceView:function(a,d){var e=d||this.getViewTarget();this.serviceView=l.addWidget(b,{delegate:this,store:a,title:"Services",closable:!0,style:"padding:0px"},this,e,!0)},openServiceView:function(){if(this.isValid())this.createServiceView(this.store);
else{var a=this;this.ls(function(){a.createServiceView(a.store)})}},onStart:function(a,d,b){a=[];for(b=0;b<d.length;b++)a.push(d[b].name);this.startServer(a,function(){this.onReload()}.bind(this))},onStop:function(a,d,b){a=[];for(b=0;b<d.length;b++)a.push(d[b].name);this.stopServer(a,function(){this.onReload()}.bind(this))},openServices:function(){this.openServiceView()},getActions:function(){return[]},init:function(){this.ctx.addActions(this.getActions())}})})},"xnode/views/NodeServiceView":function(){define("dcl/dcl dojo/_base/declare dgrid/OnDemandGrid dgrid/Selection xide/types xide/utils xaction/Action xide/layout/Container".split(" "),
function(g,f,m,l,e,h,k,n){return g(n,{declaredClass:"xide.views.NodeServiceView",delegate:null,store:null,cssClass:"layoutContainer normalizedGridView",createWidgets:function(b){b=new (f([m,l,"Keyboard"]))({collection:b,columns:{Name:{field:"name",label:"Name",sortable:!0},Status:{field:"status",label:"Status",sortable:!0,formatter:function(a){var b='\x3cdiv style\x3d"color:${color}"\x3e'+h.capitalize(a)+"\x3c/div\x3e";return h.substituteString(b,{color:"offline"==a?"red":"green"})}},Clients:{field:"clients",
label:"Clients",sortable:!0}}},this.containerNode);b.refresh();this.grid=b;this.onGridCreated(b)},startup:function(){this.inherited(arguments);this.store&&this.createWidgets(this.store)},hasItemActions:function(){return null!=this.getCurrentSelection(!0)},getItem:function(){return this.getCurrentSelection(!0)},getItemActions:function(){var b=this.getItem()[0],a=[],d=this.delegate,f=b.status===e.SERVICE_STATUS.ONLINE,c=b.status==e.SERVICE_STATUS.OFFLINE?"start":"stop",g=b.status==e.SERVICE_STATUS.OFFLINE?
"Start":"Stop",c=k.createDefault(g,b.status==e.SERVICE_STATUS.OFFLINE?"el-icon-play":"el-icon-stop","Edit/"+g,"xnode",null,{handler:!1!==b.can[c]?"start"==c?function(a,c,e){d.onStart(a,[b],e)}:function(a,c,e){d.onStop(a,[b],e)}:null}).setVisibility(e.ACTION_VISIBILITY.ACTION_TOOLBAR,{label:""}).setVisibility(e.ACTION_VISIBILITY.MAIN_MENU,{}).setVisibility(e.ACTION_VISIBILITY.CONTEXT_MENU,{});a.push(c);c=k.createDefault("Reload","fa-refresh","Edit/Reload","xnode",null,{handler:function(){d.onReload()}}).setVisibility(e.ACTION_VISIBILITY.ACTION_TOOLBAR,
{label:""}).setVisibility(e.ACTION_VISIBILITY.MAIN_MENU,{}).setVisibility(e.ACTION_VISIBILITY.CONTEXT_MENU,{});a.push(c);f=k.createDefault("Console","el-icon-indent-left","View/Console","xnode",null,{handler:function(){d.openConsole(b)},widgetArgs:{disabled:!f}}).setVisibility(e.ACTION_VISIBILITY.ACTION_TOOLBAR,{label:""}).setVisibility(e.ACTION_VISIBILITY.MAIN_MENU,{}).setVisibility(e.ACTION_VISIBILITY.CONTEXT_MENU,{});a.push(f);return 0==a.length?null:a}})})},"xnode/component":function(){define(["dojo/_base/declare",
"xide/model/Component"],function(g,f){return g([f],{beanType:"NODE_SERVICE",hasEditors:function(){return["xnode"]},getDependencies:function(){return["xide/xide","xnode/types","xnode/manager/NodeServiceManager","xnode/views/NodeServiceView"]},getLabel:function(){return"xnode"},getBeanType:function(){return this.beanType}})})},"xnode/types":function(){define([],function(){return null})}}});
//# sourceMappingURL=xnode.js.map